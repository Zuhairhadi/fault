steps:
  - command: |
      cp -r /src /fault
      cd /fault
      # tool setup
      source /cad/modules/tcl/init/bash
      module load base incisive vcs hspice spectre
      
      # install python dependencies for testing
      pip install pytest-cov pytest-codestyle
      pip install mantle

      # install fault
      pip install -e .
      
      # install SMT solvers
      mkdir ./smt_solvers
      pysmt-install --msat --confirm-agreement
      export PYTHONPATH="$$HOME/.smt_solvers/python-bindings-3.7:${PYTHONPATH}"
      export LD_LIBRARY_PATH="$$HOME/.smt_solvers/python-bindings-3.7:${LD_LIBRARY_PATH}"

      # install kratos runtime
      pip install kratos-runtime
      
      # run tests
      pytest --pycodestyle --cov-report=xml --cov=fault tests/ -v -r s

      # upload coverage results
      bash <(curl -s https://codecov.io/bash)
    label: "test"
    plugins:
      - docker#v3.2.0:
          image: "keyiz/garnet-flow-cad"
          always-pull: true
          volumes:
            - "/cad/:/cad"
          workdir: /src
          propagate-environment: true
          shell: ["/bin/bash", "-e", "-c"]
    agents:
      docker: true
  - command: |
      # set up environment
      source /etc/environment
      echo $$PATH

      # create virtual environment
      python3.7 -m venv venv
      source venv/bin/activate

      # install python dependencies for testing
      pip install wheel
      pip install pytest-cov pytest-codestyle
      pip install mantle

      # install fault
      pip install -e .
      
      # run tests
      pytest --pycodestyle --cov-report=xml --cov=fault tests/ -v -r s

      # upload coverage results
      bash <(curl -s https://codecov.io/bash)

      # deactivate virtual environment
      deactivate
    label: "fpga_verif"
    timeout_in_minutes: 60
    agents:
        fpga_verif: "true"
