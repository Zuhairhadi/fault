steps:
  - label: "Pruning docker images"
    commands:
    - yes | docker image prune -a --filter "until=24h" --filter=label='description=garnet' || true
  - wait
  - command: |
      # set up environment
      rm /bin/sh
      ln -s /bin/bash /bin/sh
      # tool setup
      source /cad/modules/tcl/init/bash
      module load base vcs xcelium hspice spectre verdi
      
      rm -rf /aha/fault
      cp -r /workdir /aha/fault

      apt-get update && apt-get install -y time verilator

      # install python dependencies for testing
      pip install "pytest<6"
      pip install pytest-cov pytest-pycodestyle
      pip install --upgrade "mantle>=2.0.0"
      pip install vcdvcd decorator kratos
      pip install DeCiDa

      # install fault
      pip install -e /aha/fault
      
      # install kratos runtime
      pip install kratos-runtime

      # use the latest cmake
      pip install cmake
      
      cd /aha/fault
      
      # run tests
      coverage run -m pytest --pycodestyle tests/ -v -r s -k test_function

      # upload coverage results
      bash <(curl -s https://codecov.io/bash)
    label: "test"
    timeout_in_minutes: 60
    plugins:
      - docker#v3.2.0:
          image: stanfordaha/garnet
          propagate-environment: true
          volumes:
            - "/cad/:/cad"
          shell: ["/bin/bash", "-e", "-c"]
    agents:
      docker: "true"
  - command: |
      # set up environment
      source /etc/environment
      echo $$PATH

      # create virtual environment
      python3.7 -m venv venv
      source venv/bin/activate

      # install python dependencies for testing
      pip install wheel
      pip install "pytest<6"
      pip install pytest-cov pytest-pycodestyle
      pip install vcdvcd decorator kratos
      pip install --upgrade "mantle>=2.0.0"

      # use the latest cmake
      pip install cmake

      # install fault
      pip install -e .
      
      # run tests
      pytest --pycodestyle --cov-report=xml --cov=fault tests/ -v -r s

      # upload coverage results
      bash <(curl -s https://codecov.io/bash)

      # deactivate virtual environment
      deactivate
    label: "fpga_verif"
    timeout_in_minutes: 60
    agents:
        fpga_verif: "true"
